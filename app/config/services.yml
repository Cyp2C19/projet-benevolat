# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    sport_directory: '%kernel.root_dir%/../web/img/sports'

services:
    # accueil configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Repository,Tests}'

    AppBundle\Service\FileUploader:
        arguments:
            $targetDir: '%sport_directory%'

    AppBundle\EventListener\SportUploadListener:
            tags:
                - { name: doctrine.event_listener, event: prePersist }
                - { name: doctrine.event_listener, event: preUpdate }

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    app.type.evenements:
            class: AppBundle\Form\EvenementMinType
            arguments: [ "@doctrine.orm.entity_manager" ]
            tags:
                - { name: form.type }

    admin.sport:
            class: AppBundle\Admin\SportAdmin
            arguments: [~, AppBundle\Entity\Sport, ~]
            tags:
                - { name: sonata.admin, manager_type: orm, label: Sports }
            public: true

    admin.niveau:
            class: AppBundle\Admin\NiveauAdmin
            arguments: [~, AppBundle\Entity\Niveau, ~]
            tags:
                - { name: sonata.admin, manager_type: orm, label: Niveaux }
            public: true

    admin.categorieAge:
                class: AppBundle\Admin\CategorieAgeAdmin
                arguments: [~, AppBundle\Entity\CategorieAge, ~]
                tags:
                    - { name: sonata.admin, manager_type: orm, label: Catégories d'âge }
                public: true

    admin.missionBenevolat:
                    class: AppBundle\Admin\MissionBenevolatAdmin
                    arguments: [~, AppBundle\Entity\MissionBenevolat, ~]
                    tags:
                        - { name: sonata.admin, manager_type: orm, label: Missions de bénévolat }
                    public: true

    admin.evenement:
                    class: AppBundle\Admin\EvenementAdmin
                    arguments: [~, AppBundle\Entity\Evenement, ~]
                    tags:
                        - { name: sonata.admin, manager_type: orm, label: Événements }
                    public: true

    admin.club:
                    class: AppBundle\Admin\ClubAdmin
                    arguments: [~, AppBundle\Entity\Club, ~]
                    tags:
                        - { name: sonata.admin, manager_type: orm, label: Clubs }
                    public: true

    admin.benevole:
                    class: AppBundle\Admin\BenevoleAdmin
                    arguments: [~, AppBundle\Entity\Benevole, ~]
                    tags:
                        - { name: sonata.admin, manager_type: orm, label: Bénévoles }
                    public: true

    admin.nomClub:
                        class: AppBundle\Admin\NomClubAdmin
                        arguments: [~, AppBundle\Entity\NomClub, ~]
                        tags:
                            - { name: sonata.admin, manager_type: orm, label: Intitulés de club }
                        public: true

